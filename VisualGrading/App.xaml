<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:VisualGrading"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing"
    x:Class="VisualGrading.App"
    StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Color x:Key="MediumNavColor" A="255" R="25" G="94" B="99" />
        <Color x:Key="LightNavColor" A="255" R="235" G="235" B="235" />

        <SolidColorBrush x:Key="DarkNavBrush" Color="#063940" />
        <SolidColorBrush x:Key="MediumNavBrush" Color="{StaticResource MediumNavColor}" />
        <SolidColorBrush x:Key="LightNavBrush" Color="{StaticResource LightNavColor}" />

        <!--Color="#195E63"-->

        <SolidColorBrush x:Key="LightFontBrush" Color="White" />

        <SolidColorBrush x:Key="AlternatingBackground" Color="WhiteSmoke" />
        <SolidColorBrush x:Key="DataGridLines" Color="Transparent" />

        <Style x:Key="TitleButtonStyle" TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource DarkNavBrush}" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="26" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="MidnightBlue" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderThickness" Value="0,0,0,2" />
                    <Setter Property="BorderBrush" Value="{StaticResource DarkNavBrush}" />
                    <Setter Property="Background" Value="{StaticResource MediumNavBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MediumNavBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MainNavGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource DarkNavBrush}" />
        </Style>


        <Style x:Key="ChildNavGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource MediumNavBrush}" />
            <Setter Property="Height" Value="40" />
        </Style>

        <Style x:Key="ContentGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource LightNavBrush}" />
        </Style>

        <Style x:Key="ContentDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternatingBackground}" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridLines}" />
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridLines}" />
            <Setter Property="Background" Value="{StaticResource LightNavBrush}" />
        </Style>

        <Style x:Key="ContentDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Light" />
        </Style>

        <Style x:Key="BoldContentDataGridCellStyle" TargetType="{x:Type DataGridCell}"
               BasedOn="{StaticResource ContentDataGridCellStyle}">
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="NonEditableContentDataGridCellStyle" TargetType="{x:Type DataGridCell}"
               BasedOn="{StaticResource ContentDataGridCellStyle}">
            <Setter Property="ToolTip" Value="Cannot edit this element" />
        </Style>

        <Style x:Key="ContentDataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}"
               BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
            <Setter Property="Background" Value="{StaticResource LightNavBrush}" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource LightNavBrush}" />
        </Style>

        <Style x:Key="NonEditableContentDataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}"
               BasedOn="{StaticResource ContentDataGridHeaderStyle}">
            <Setter Property="IsManipulationEnabled" Value="False" />
        </Style>


        <Style x:Key="ContentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="MinWidth" Value="65" />
            <Setter Property="BorderBrush" Value="LightGray" />
        </Style>

        <Style x:Key="ChildNavButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="MinWidth" Value="150" />
        </Style>

        <Style x:Key="ChildNavXButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ChildNavButtonStyle}">
            <Setter Property="MinWidth" Value="20" />
        </Style>

        <Style x:Key="ChildNavLeftMostButtonStyle" TargetType="{x:Type Button}"
               BasedOn="{StaticResource ChildNavButtonStyle}">
            <Setter Property="Margin" Value="10,0" />
        </Style>

        <Style x:Key="ChildNavDockPanel" TargetType="{x:Type DockPanel}">
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style x:Key="AddEditTextBoxStyle" TargetType="{x:Type TextBoxBase}">
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="30" />

        </Style>

        <Style x:Key="AddEditPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="30" />
        </Style>

        <Style x:Key="AddEditLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />

        </Style>

        <Style x:Key="AddEditButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="ChildNavTextBoxStyle" TargetType="{x:Type TextBoxBase}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style x:Key="ChildNavTextBlockForComboBoxStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="MinWidth" Value="150" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedItem, ElementName=comboBox}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ChildNavLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>

        <Style x:Key="ChildNavComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource MediumNavBrush}" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="MinWidth" Value="150" />

            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style x:Key="ChildNavComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="{StaticResource MediumNavBrush}" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{StaticResource LightFontBrush}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <ControlTemplate x:Key="ComboBoxControlTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2"
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="1"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                   MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="DropDownBorder"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                            VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect"
                                                   Fill="{Binding Background, ElementName=DropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                   Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="ClickMode" Value="Press" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="True">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                    <!--Custom values start-->
                                                    <GradientStop Color="{StaticResource MediumNavColor}" Offset="0" />
                                                    <GradientStop Color="{StaticResource MediumNavColor}" Offset="1" />
                                                    <!--Custom values end-->
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
                                                    HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True"
                                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                <Path x:Name="Arrow"
                                                      Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                      Fill="{StaticResource LightFontBrush}"
                                                      HorizontalAlignment="Center" Margin="0"
                                                      VerticalAlignment="Center" />
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="true" />
                                                    <Condition
                                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                        Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FFABADB3" />
                                                <Setter Property="Background" TargetName="splitBorder"
                                                        Value="Transparent" />
                                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                                        Value="Transparent" />
                                            </MultiDataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill" TargetName="Arrow" Value="Black" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                        Value="true" />
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFECF4FC" Offset="0" />
                                                            <GradientStop Color="#FFDCECFC" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FF7EB4EA" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                        Value="true" />
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FF7EB4EA" />
                                                <Setter Property="Background" TargetName="splitBorder">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFEBF4FC" Offset="0" />
                                                            <GradientStop Color="#FFDCECFC" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                                        Value="#FF7EB4EA" />
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Fill" TargetName="Arrow" Value="Black" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                        Value="true" />
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFDAECFC" Offset="0" />
                                                            <GradientStop Color="#FFC4E0FC" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FF569DE5" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                        Value="true" />
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FF569DE5" />
                                                <Setter Property="Background" TargetName="splitBorder">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFDAEBFC" Offset="0" />
                                                            <GradientStop Color="#FFC4E0FC" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                                        Value="#FF569DE5" />
                                            </MultiDataTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot"
                                                        Value="#FFF0F0F0" />
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FFD9D9D9" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                        Value="false" />
                                                    <Condition
                                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                        Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                                        Value="#FFBFBFBF" />
                                                <Setter Property="Background" TargetName="splitBorder"
                                                        Value="Transparent" />
                                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                                        Value="Transparent" />
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  IsHitTestVisible="False" Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5" />
                    <Setter Property="Color" TargetName="shadow" Value="#71000000" />
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </MultiTrigger>
                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Application.Resources>
</Application>